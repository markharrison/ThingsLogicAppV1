{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Set_variable": {
                        "inputs": {
                            "name": "vStatus",
                            "value": "red"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                },
                "expression": {
                    "or": [
                        {
                            "contains": [
                                "@variables('vTags')",
                                "people"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "person"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "man"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "woman"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "girl"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "boy"
                            ]
                        },
                        {
                            "contains": [
                                "@variables('vTags')",
                                "child"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_3": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Describe_Image_(V3)": {
                "inputs": {
                    "body": {
                        "url": "@body('Parse_JSON')?['Image']"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/v3/subdomain/@{encodeURIComponent(encodeURIComponent('autoFilledSubdomain'))}/vision/v2.0/describe",
                    "queries": {
                        "format": "Image URL",
                        "maxCandidates": 1
                    }
                },
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "HTTP_2": {
                "inputs": {
                    "body": {
                        "image": "@body('Parse_JSON')?['Image']",
                        "latitude": "@body('Parse_JSON')?['Latitude']",
                        "longitude": "@body('Parse_JSON')?['Longitude']",
                        "name": "@body('Parse_JSON')?['Name']",
                        "status": "@variables('vStatus')",
                        "text": "@concat(variables('vCaption'),' ', variables('vTags'))",
                        "thingid": "@body('Parse_JSON')?['Thingid']"
                    },
                    "method": "PUT",
                    "uri": "@{parameters('thingsapiurl')}/api/things/@{body('Parse_JSON')?['Thingid']}"
                },
                "runAfter": {
                    "Condition": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "vCaption",
                            "type": "string",
                            "value": "@{body('Describe_Image_(V3)')?['description']?['captions']?[0]?['text']}"
                        }
                    ]
                },
                "runAfter": {
                    "Describe_Image_(V3)": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_2": {
                "inputs": {
                    "variables": [
                        {
                            "name": "vTags",
                            "type": "string",
                            "value": "@{body('Describe_Image_(V3)')?['description']?['tags']}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_3": {
                "inputs": {
                    "variables": [
                        {
                            "name": "vStatus",
                            "type": "string",
                            "value": "amber"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_2": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@triggerBody()?['data']",
                    "schema": {
                        "properties": {
                            "Data": {
                                "type": "string"
                            },
                            "Image": {
                                "type": "string"
                            },
                            "Latitude": {
                                "type": "number"
                            },
                            "Longitude": {
                                "type": "number"
                            },
                            "Name": {
                                "type": "string"
                            },
                            "Status": {
                                "type": "string"
                            },
                            "Text": {
                                "type": "string"
                            },
                            "Thingid": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {},
                "type": "ParseJson"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            },
            "thingsapiurl": {
                "defaultValue": "https://thingsapi.azure1.dev",
                "type": "String"
            }
        },
        "triggers": {
            "When_a_resource_event_occurs": {
                "inputs": {
                    "body": {
                        "properties": {
                            "destination": {
                                "endpointType": "webhook",
                                "properties": {
                                    "endpointUrl": "@{listCallbackUrl()}"
                                }
                            },
                            "topic": "/subscriptions/bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8/resourceGroups/things-rg/providers/Microsoft.EventGrid/topics/thingseventgrid"
                        }
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                        }
                    },
                    "path": "/subscriptions/@{encodeURIComponent('bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8')}/providers/@{encodeURIComponent('Microsoft.EventGrid.Topics')}/resource/eventSubscriptions",
                    "queries": {
                        "x-ms-api-version": "2017-06-15-preview"
                    }
                },
                "splitOn": "@triggerBody()",
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureeventgrid_1": {
                    "connectionId": "/subscriptions/bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8/resourceGroups/things-rg/providers/Microsoft.Web/connections/azureeventgrid-1",
                    "connectionName": "azureeventgrid-1",
                    "id": "/subscriptions/bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8/providers/Microsoft.Web/locations/uksouth/managedApis/azureeventgrid"
                },
                "cognitiveservicescomputervision": {
                    "connectionId": "/subscriptions/bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8/resourceGroups/things-rg/providers/Microsoft.Web/connections/cognitiveservicescomputervision",
                    "connectionName": "cognitiveservicescomputervision",
                    "id": "/subscriptions/bf0ff2fe-5503-48b0-8b52-cd0e67aa8fd8/providers/Microsoft.Web/locations/uksouth/managedApis/cognitiveservicescomputervision"
                }
            }
        }
    }
}
