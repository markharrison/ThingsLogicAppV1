{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "thingsAPIUrl": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "defaultValue": "",
      "metadata": {
        "description": "Things API URL."
      }
    },
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "cognitiveservicescomputervision_1_Connection_Name": {
      "type": "string",
      "defaultValue": "cognitiveservicescomputervision"
    },
    "cognitiveservicescomputervision_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ThingsComputerVision"
    },
    "cognitiveservicescomputervision_1_apiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Cognitive Services Account Key"
      }
    },
    "cognitiveservicescomputervision_1_siteUrl": {
      "type": "string",
      "metadata": {
        "description": "Root site url (Example: https://westus.api.cognitive.microsoft.com ).If not specified site url will be defaulted to 'https://westus.api.cognitive.microsoft.com'."
      },
      "defaultValue": "https://northeurope.api.cognitive.microsoft.com/ "
    }
  },
  "variables": {
    "logicApp": {
      "name": "[parameters('logicAppName')]",
      "trigger": "manual"
    },
    "resourceId": "[resourceId('Microsoft.Logic/workflows/triggers', variables('logicApp').name, variables('logicApp').trigger)]",
    "apiVersion": "[providers('Microsoft.Logic', 'workflows').apiVersions[0]]"
  },
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "PUT",
                "uri": "@{parameters('thingsapiurl')}/api/Things/@{triggerBody()?['thingid']} ",
                "body": {
                  "thingid": "@triggerBody()?['thingid']",
                  "name": "@triggerBody()?['name']",
                  "latitude": "@triggerBody()?['latitude']",
                  "longitude": "@triggerBody()?['longitude']",
                  "image": "@triggerBody()?['image']",
                  "status": "@variables('strStatus')",
                  "text": "@concat(variables('strCaption'),' ', variables('strTags'))"
                }
              },
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              }
            },
            "Response": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 200
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            },
            //"Describe_Image_URL": {
            //  "type": "ApiConnection",
            //  "inputs": {
            //    "host": {
            //      "connection": {
            //        "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
            //      }
            //    },
            //    "method": "post",
            //    "body": {
            //      "url": "@triggerBody()?['image']"
            //    },
            //    "path": "/vision/v2.0/describeImageURL"
            //  },
            //  "runAfter": {}
            //},
            "Describe_Image_(V3)": {
              "inputs": {
                "body": {
                  "url": "@triggerBody()?['image']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v3/subdomain/@{encodeURIComponent(encodeURIComponent('autoFilledSubdomain'))}/vision/v2.0/describe",
                "queries": {
                  "format": "Image URL"
                }
              },
              "runAfter": {},
              "type": "ApiConnection"
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "strCaption",
                    "type": "String",
                    // "value": "@{string(body('Describe_Image_URL')?['description']?['captions']?[0]?['text'])}"
                    "value": "@{body('Describe_Image_(V3)')?['description']?['captions']?[0]?['text']}"
                  }
                ]
              },
              "runAfter": {
                "Describe_Image_(V3)": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_2": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "strTags",
                    "type": "String",
                    //"value": "@{string(body('Describe_Image_URL')?['description']?['tags'])}"
                    "value": "@{body('Describe_Image_(V3)')?['description']?['tags']}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_3": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "strStatus",
                    "type": "String",
                    "value": "amber"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "contains": [
                      "@variables('strTags')",
                      "people"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "person"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "man"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "woman"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "girl"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "boy"
                    ]
                  },
                  {
                    "contains": [
                      "@variables('strTags')",
                      "child"
                    ]
                  }
                ]
              },
              "actions": {
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "strStatus",
                    "value": "red"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "thingsapiurl": {
              "type": "string",
              "defaultValue": "[parameters('thingsAPIUrl')]"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "thingid": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "cognitiveservicescomputervision": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'cognitiveservicescomputervision')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicescomputervision_1_Connection_Name'))]",
                "connectionName": "[parameters('cognitiveservicescomputervision_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicescomputervision_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('cognitiveservicescomputervision_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'cognitiveservicescomputervision')]"
        },
        "displayName": "[parameters('cognitiveservicescomputervision_1_Connection_DisplayName')]",
        "parameterValues": {
          "apiKey": "[parameters('cognitiveservicescomputervision_1_apiKey')]",
          "siteUrl": "[parameters('cognitiveservicescomputervision_1_siteUrl')]"
        }
      }
    }
  ],
  "outputs": {
    "endpointUrl": {
      "type": "string",
      "value": "[listCallbackUrl(variables('resourceId'), variables('apiVersion')).value]"
    },
    "path": {
      "type": "string",
      "value": "[listCallbackUrl(variables('resourceId'), variables('apiVersion')).basePath]"
    },
    "querystring": {
      "type": "string",
      "value": "[concat('api-version=', variables('apiVersion'), '&sp=', uriComponent(listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sp), '&sv=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sv, '&sig=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sig)]"
    },
    "sasToken": {
      "type": "string",
      "value": "[concat('sp=', uriComponent(listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sp), '&sv=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sv, '&sig=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sig)]"
    }
  }
}